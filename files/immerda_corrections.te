policy_module(immerda_corrections,1.4.34)

require {
	type initrc_t,proc_xen_t;
	type staff_t,sysadm_home_t;
	type sysadm_t;

	# emerge sync
	type portage_t.fetch, portage_tmp_t, portage_t;
	# etc-update
	type portage_t.merge, portage_conf_t;
	# emerge -DuN world: ssh
	type null_device_t;

	# cron-zeugs (ntpupdate und mail senden)
	type crond_t, bin_t, smtp_port_t, system_crond_t, tmp_t, usr_t;

	# booting

}
#allow sysadm_su_t newrole_t:process sigchld;

# module reload

# cron-zeugs (ntpupdate und mail senden)
allow crond_t bin_t:file { execute execute_no_trans read };
allow crond_t smtp_port_t:tcp_socket { name_connect recv_msg send_msg };
allow system_crond_t tmp_t:dir { create rmdir };
allow system_crond_t usr_t:file write;

#### neuboot mit 2.6.20.20
require {
	type consoletype_t, file_t;
	type dmesg_t,fsadm_t, hotplug_t,hwclock_t,init_t,device_t,lvm_t,mount_t;
	type unlabeled_t,xen_image_t,restorecon_t,udev_t,lib_t,xend_t,fs_t;
}
allow consoletype_t file_t:chr_file { getattr ioctl read write };
allow dmesg_t file_t:chr_file { read write };
allow fsadm_t file_t:chr_file { ioctl read write };
allow hotplug_t file_t:chr_file { read write };
allow hwclock_t file_t:chr_file { read write };
allow init_t file_t:chr_file { ioctl read write };
allow initrc_t device_t:blk_file create;
allow initrc_t device_t:chr_file write;
allow initrc_t file_t:chr_file { getattr ioctl read write };
allow initrc_t proc_xen_t:dir { getattr search };
allow initrc_t proc_xen_t:file { getattr read };
allow lvm_t file_t:chr_file { getattr read write };
allow mount_t file_t:chr_file { read write };
allow mount_t unlabeled_t:dir mounton;
allow mount_t xen_image_t:dir { getattr mounton };
allow restorecon_t file_t:chr_file { read write };
allow udev_t device_t:lnk_file { relabelfrom relabelto };
allow udev_t file_t:chr_file { read write };
allow udev_t lib_t:file { execute execute_no_trans };
dontaudit xend_t fs_t:filesystem getattr;

# emerge sync
require{
	type portage_t.sandbox,ldconfig_t,var_t;
}
allow portage_t portage_tmp_t:file { getattr read unlink };
allow portage_t portage_conf_t:file { execute execute_no_trans };
allow portage_t.merge portage_conf_t:file { execute execute_no_trans };
allow portage_t null_device_t:chr_file setattr;
allow portage_t.merge null_device_t:chr_file setattr;
allow portage_t.fetch portage_tmp_t:file { getattr read unlink };
allow portage_t sysadm_devpts_t:chr_file setattr;
allow portage_t.sandbox sysadm_devpts_t:chr_file setattr;
#emerge -DuN world
allow ldconfig_t portage_tmp_t:file { read write };
allow ldconfig_t usr_t:lnk_file read;
allow ldconfig_t var_t:file { read write };

# epol.check_avtab_hierarchy_callback: hierarchy violation between types portage_t.merge and portage_conf_t : file {  execute_no_trans }
#libsepol.check_avtab_hierarchy_callback: hierarchy violation between types portage_t.sandbox and sysadm_devpts_t : chr_file {  setattr }
#libsepol.check_avtab_hierarchy_callback: hierarchy violation between types portage_t.merge and null_device_t : chr_file {  setattr }


# nfs
require {
	type nfsd_fs_t, var_lib_nfs_t, nfsd_t, portage_ebuild_t,portmap_t,var_run_t;
}
allow initrc_t nfsd_fs_t:dir search;
allow initrc_t nfsd_fs_t:file getattr;
allow initrc_t var_lib_nfs_t:dir { add_name remove_name write };
allow initrc_t var_lib_nfs_t:file { create lock read rename unlink write };
allow nfsd_t portage_ebuild_t:dir getattr;
allow portmap_t var_run_t:file { getattr write };
# nfs mount
require {
	type kernel_t,munin_t,rpc_pipefs_t,rpcd_t,bsdpty_device_t,clock_device_t,etc_t,fixed_disk_device_t,initctl_t,kmsg_device_t;
	type memory_device_t,mouse_device_t,nvram_device_t,proc_kcore_t,ptmx_t,removable_device_t,sysadm_devpts_t,tmpfs_t,tty_device_t;
	type xen_devpts_t,cpu_device_t,event_device_t,lvm_control_t,tun_tap_device_t;
}
allow kernel_t portage_ebuild_t:dir { add_name getattr read search write };
allow kernel_t portage_ebuild_t:file { getattr read write create execute };
allow munin_t nfsd_fs_t:dir getattr;
allow munin_t nfsd_t:dir { getattr search };
allow munin_t nfsd_t:file read;
allow munin_t portmap_t:dir { getattr search };
allow munin_t portmap_t:file read;
allow munin_t rpc_pipefs_t:dir getattr;
allow munin_t rpcd_t:dir { getattr search };
allow munin_t rpcd_t:file read;
allow munin_t var_lib_nfs_t:dir search;
allow nfsd_t bsdpty_device_t:chr_file getattr;
allow nfsd_t clock_device_t:chr_file getattr;
allow nfsd_t device_t:blk_file { getattr ioctl read };
allow nfsd_t device_t:chr_file getattr;
allow nfsd_t etc_t:dir { add_name remove_name write };
allow nfsd_t etc_t:file { create link rename setattr unlink write };
allow nfsd_t fixed_disk_device_t:blk_file { getattr ioctl };
dontaudit nfsd_t fixed_disk_device_t:blk_file { read };
allow nfsd_t fixed_disk_device_t:chr_file getattr;
allow nfsd_t initctl_t:fifo_file getattr;
allow nfsd_t kmsg_device_t:chr_file getattr;
allow nfsd_t memory_device_t:chr_file getattr;
allow nfsd_t mouse_device_t:chr_file getattr;
allow nfsd_t nvram_device_t:chr_file getattr;
allow nfsd_t proc_kcore_t:file getattr;
allow nfsd_t ptmx_t:chr_file getattr;
allow nfsd_t removable_device_t:blk_file getattr;
allow nfsd_t sysadm_devpts_t:chr_file getattr;
allow nfsd_t tmpfs_t:dir { getattr read };
allow nfsd_t tty_device_t:chr_file getattr;
allow nfsd_t xen_devpts_t:chr_file getattr;
#
allow nfsd_t cpu_device_t:chr_file getattr;
allow nfsd_t event_device_t:chr_file getattr;
allow nfsd_t lvm_control_t:chr_file getattr;
allow nfsd_t tun_tap_device_t:chr_file getattr;

# der /usr/bin/env ist ein link ... das ging nicht ...
require {
	type xm_exec_t;
}
init_exec_script_files(xm_exec_t)
corecmd_read_bin_symlinks(xm_exec_t)
files_getattr_all_symlinks(xm_exec_t)

# screen change to other xen
require {
    type sshd_t;
}
allow sshd_t sysadm_devpts_t:chr_file setattr;

#unconfined_domtrans(xm_exec_t)

# semodule -l > /root/selinuxdev/semodule_list
require { type semanage_t; }
allow semanage_t sysadm_home_t:file write;

#nach boot vom 0711241057
# audit(1195898788.661:3): avc:  denied  { read } for  pid=1283 comm="write_root_link" name="console" dev=tmpfs ino=1552 scontext=system_u:system_r:initrc_t tcontext=system_u:object_r:device_t tclass=chr_file
# audit(1195898804.992:6): avc:  denied  { write } for  pid=3483 comm="runscript.sh" name="resolv.conf" dev=sda3 ino=391728 scontext=system_u:system_r:initrc_t tcontext=system_u:object_r:net_conf_t tclass=file
# audit(1195898804.992:7): avc:  denied  { setattr } for  pid=3529 comm="chmod" name="resolv.conf" dev=sda3 ino=391728 scontext=system_u:system_r:initrc_t tcontext=system_u:object_r:net_conf_t tclass=file
# audit(1195898792.281:4): avc:  denied  { read write } for  pid=2301 comm="lvm" name="device-mapper" dev=tmpfs ino=3257 scontext=system_u:system_r:lvm_t tcontext=system_u:object_r:device_t tclass=chr_file
#audit(1195898792.281:5): avc:  denied  { ioctl } for  pid=2301 comm="lvm" name="device-mapper" dev=tmpfs ino=3257 scontext=system_u:system_r:lvm_t tcontext=system_u:object_r:device_t tclass=chr_file
require { type net_conf_t; }
allow initrc_t device_t:chr_file read;
allow initrc_t net_conf_t:file { setattr write };
allow lvm_t device_t:chr_file { ioctl read write };

allow sysadm_t xm_exec_t:file { execute execute_no_trans };


# emerge sync as cron
require { type portage_cache_t, portage_log_t, root_t, rsync_port_t, portage_db_t; }
#allow system_crond_t var_t:file write;
#allow system_crond_t usr_t:file setattr;
allow system_crond_t net_conf_t:file read;
allow system_crond_t portage_conf_t:file read;
allow system_crond_t portage_cache_t:dir { add_name remove_name write };
allow system_crond_t portage_cache_t:file { create read rename setattr unlink write };
allow system_crond_t portage_ebuild_t:dir { add_name create remove_name setattr write };
allow system_crond_t portage_ebuild_t:file { read create rename setattr unlink write };
allow system_crond_t portage_log_t:file { append lock };
allow system_crond_t root_t:dir write;
allow system_crond_t rsync_port_t:tcp_socket name_connect;
allow system_crond_t self:tcp_socket { connect create read write };
allow system_crond_t self:udp_socket { connect create getattr read write };
allow system_crond_t portage_db_t:file read;
allow system_crond_t portage_ebuild_t:dir rmdir;
allow system_crond_t usr_t:file setattr;
allow system_crond_t portage_conf_t:file { execute execute_no_trans ioctl };

# glsa-check
allow system_crond_t smtp_port_t:tcp_socket name_connect;
allow system_crond_t self:netlink_route_socket { bind create getattr nlmsg_read read write };
allow system_crond_t var_t:file { setattr write };

# syslog-ng
require { type syslogd_t,logrotate_t; }
allow syslogd_t logrotate_t:fd use;
allow initrc_t crond_t:fifo_file read;

# cron
require { type crond_tmp_t; }
allow system_crond_t crond_tmp_t:file unlink;
# aide
require { type crack_db_t, var_lib_t; }
allow system_crond_t crack_db_t:file read;
allow system_crond_t var_lib_t:file { ioctl lock read write };

# aide
require { type modules_dep_t, modules_object_t, udev_tbl_t; }
allow system_crond_t device_t:chr_file getattr;
allow system_crond_t device_t:file read;
allow system_crond_t modules_dep_t:file read;
allow system_crond_t modules_object_t:file read;
allow system_crond_t modules_object_t:lnk_file read;
allow system_crond_t udev_tbl_t:file read;

# selinux
# update module (semodule -u)
require { type selinux_config_t; }
allow semanage_t selinux_config_t:dir { rename rmdir };

# boot 071221
allow initrc_t usr_t:file execute;
allow initrc_t var_lib_t:file { execute execute_no_trans };
allow mount_t unlabeled_t:filesystem { mount };
allow munin_t unlabeled_t:dir getattr;
allow munin_t unlabeled_t:filesystem getattr;
allow sysadm_t unlabeled_t:filesystem getattr;

